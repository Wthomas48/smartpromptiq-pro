// index.cjs - Modern Express server setup
const express = require('express');
const cors = require('cors');
const health = require('./routes/health.cjs');
const { generalLimiter } = require('./middleware/rateLimiter.cjs');

const app = express();

// ---- Trust proxy (Railway/Cloudflare) ----
const TRUST_PROXY = process.env.TRUST_PROXY || '1';
app.set('trust proxy', TRUST_PROXY === 'true' ? true : Number.isNaN(Number(TRUST_PROXY)) ? 1 : Number(TRUST_PROXY));

// ---- CORS ----
app.use(cors({
  origin: ['https://smartpromptiq.com', 'http://localhost:5173'],
  credentials: true,
  allowedHeaders: ['Content-Type', 'Authorization', 'X-Device-Fingerprint', 'X-Client-Type'],
  methods: ['GET','POST','PUT','PATCH','DELETE','OPTIONS']
}));

// ---- Core middleware ----
app.use(express.json());

// ---- Rate limit early ----
app.use(generalLimiter);

// ---- Routes ----
app.use('/api', health);

// Add demo generate endpoint
app.post('/api/demo/generate', (req, res) => {
  console.log('ðŸŽ¯ Demo generation request received:', req.body);

  const { templateType, userResponses = {} } = req.body;

  const sampleContent = {
    title: `${templateType || 'Demo'} Content Generated`,
    content: `# AI-Generated Professional Content

This is a sample of the comprehensive, professional content that SmartPromptIQ creates using advanced AI technology.

## Your Input
Template Type: ${templateType}
Business Name: ${userResponses.businessName || 'Your Business'}

## Generated Result
Our AI has analyzed your requirements and generated optimized content tailored to your specific needs.

Key Features:
â€¢ Personalized content generation
â€¢ Professional quality output
â€¢ Customized to your specific requirements
â€¢ Ready-to-use templates and formats

*Generated by SmartPromptIQ's AI engine*`
  };

  res.json({
    success: true,
    message: 'Demo content generated successfully',
    data: {
      title: sampleContent.title,
      content: sampleContent.content,
      generatedAt: new Date().toISOString(),
      isRealGeneration: false,
      templateType,
      requestId: `demo_${Date.now()}`
    }
  });
});

// Add feedback rating endpoint
app.post('/api/feedback/rating', (req, res) => {
  console.log('Rating submission received:', req.body);

  res.status(200).json({
    success: true,
    message: 'Rating submitted successfully',
    data: {
      rating: req.body.rating,
      submittedAt: new Date().toISOString()
    }
  });
});

// Root route - Clean version without health page reference
app.get('/', (req, res) => {
  res.send(`
    <!DOCTYPE html>
    <html>
    <head>
      <title>SmartPromptiq Pro</title>
      <style>
        body { font-family: Arial, sans-serif; margin: 50px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; }
        .container { background: rgba(255,255,255,0.1); padding: 30px; border-radius: 15px; max-width: 600px; margin: 0 auto; }
        h1 { text-align: center; margin-bottom: 30px; }
        .status { background: rgba(255,255,255,0.2); padding: 15px; border-radius: 8px; margin: 20px 0; }
        .feature { background: rgba(255,255,255,0.15); padding: 15px; margin: 10px 0; border-radius: 8px; }
      </style>
    </head>
    <body>
      <div class="container">
        <h1>ðŸš€ SmartPromptiq Pro</h1>
        <div class="status">
          <strong>Status:</strong> âœ… Live and Running<br>
          <strong>Version:</strong> 2.0.0<br>
          <strong>Updated:</strong> ${new Date().toLocaleString()}
        </div>
        
        <h3>ðŸŽ¯ AI-Powered Prompt Optimization</h3>
        <div class="feature">
          <strong>âœ¨ Smart Prompts</strong><br>
          Generate optimized prompts for better AI responses
        </div>
        <div class="feature">
          <strong>ðŸ”§ Prompt Refinement</strong><br>
          Automatically enhance your prompts for maximum effectiveness  
        </div>
        <div class="feature">
          <strong>ðŸ“Š Performance Analytics</strong><br>
          Track and measure your prompt performance
        </div>
        
        <div style="text-align: center; margin-top: 30px;">
          <p>ðŸŽ‰ Your SmartPromptiq Pro platform is ready!</p>
        </div>
      </div>
    </body>
    </html>
  `);
});

// ---- Listen on $PORT ----
const port = Number(process.env.PORT || 3000); // 3000 only for local
app.listen(port, () => console.log(`API listening on port ${port}`));

module.exports = app;
